const { getStreamsFromAttachment, log } = global.utils;
const mediaTypes = ["photo", 'png', "animated_image", "video", "audio"];

module.exports = {
	config: {
		name: "callad",
		version: "1.7",
		author: "NTKhang",
		countDown: 5,
		role: 0,
		description: {
			vi: "g·ª≠i b√°o c√°o, g√≥p √Ω, b√°o l·ªói,... c·ªßa b·∫°n v·ªÅ admin bot",
			en: "send report, feedback, bug,... to admin bot"
		},
		category: "contacts admin",
		guide: {
			vi: "   {pn} <tin nh·∫Øn>",
			en: "   {pn} <message>"
		}
	},

	langs: {
		vi: {
			missingMessage: "Vui l√≤ng nh·∫≠p tin nh·∫Øn b·∫°n mu·ªën g·ª≠i v·ªÅ admin",
			sendByGroup: "\n- ƒê∆∞·ª£c g·ª≠i t·ª´ nh√≥m: %1\n- Thread ID: %2",
			sendByUser: "\n- ƒê∆∞·ª£c g·ª≠i t·ª´ ng∆∞·ªùi d√πng",
			content: "\n\nN·ªôi dung:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n%1\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nPh·∫£n h·ªìi tin nh·∫Øn n√†y ƒë·ªÉ g·ª≠i tin nh·∫Øn v·ªÅ ng∆∞·ªùi d√πng",
			success: "ƒê√£ g·ª≠i tin nh·∫Øn c·ªßa b·∫°n v·ªÅ %1 admin th√†nh c√¥ng!\n%2",
			failed: "ƒê√£ c√≥ l·ªói x·∫£y ra khi g·ª≠i tin nh·∫Øn c·ªßa b·∫°n v·ªÅ %1 admin\n%2\nKi·ªÉm tra console ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt",
			reply: "üìç Ph·∫£n h·ªìi t·ª´ admin %1:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n%2\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nPh·∫£n h·ªìi tin nh·∫Øn n√†y ƒë·ªÉ ti·∫øp t·ª•c g·ª≠i tin nh·∫Øn v·ªÅ admin",
			replySuccess: "ƒê√£ g·ª≠i ph·∫£n h·ªìi c·ªßa b·∫°n v·ªÅ admin th√†nh c√¥ng!",
			feedback: "üìù Ph·∫£n h·ªìi t·ª´ ng∆∞·ªùi d√πng %1:\n- User ID: %2%3\n\nN·ªôi dung:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n%4\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nPh·∫£n h·ªìi tin nh·∫Øn n√†y ƒë·ªÉ g·ª≠i tin nh·∫Øn v·ªÅ ng∆∞·ªùi d√πng",
			replyUserSuccess: "ƒê√£ g·ª≠i ph·∫£n h·ªìi c·ªßa b·∫°n v·ªÅ ng∆∞·ªùi d√πng th√†nh c√¥ng!",
			noAdmin: "Hi·ªán t·∫°i bot ch∆∞a c√≥ admin n√†o"
		},
		en: {
			missingMessage: "üå∫...Veuillez saisir le message que vous souhaitez envoyer √† l'administrateur...üå∫\n[prefix+Callad+message]",
			sendByGroup: "\n‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇùó†ùó≤ùòÄùòÄùóÆùó¥ùó≤ ùó≤ùóªùòÉùóºùòÜùó≤ÃÅ\n‚îÇùó±ùó≤ùóΩùòÇùó∂ùòÄ ùóπùó≤ ùó¥ùóøùóºùòÇùóΩùó≤:\n‚îÇ[%1]\n‚îÇ Thread ID\n‚îÇ%2\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ",
			sendByUser: "\n‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇ Message de l'utilisateur\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óÜ",
			content: "\nüå∫[‚úéÔπè%1]üå∫\n‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇR√©ponds √† ce message\n‚îÇpour envoyer ton\n‚îÇmessage √† l'utilisateurüå∫\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇ‚úß.Ôºà„Äú^‚àá^)üçÄ(^‚àá^„Äú)¬∞.‚ùÅ\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ",
			success: "\n.   /)    /)\n.  (ÔΩ°‚Ä¢‚àá‚Ä¢ÔΩ°)„Äù‚Çé‚Çé ùêªùêºùëÅùê¥ùëáùê¥....¬∞-`‚ú¶\n‚ï≠‚à™‚îÅ‚à™‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇüçÄ‚ùÄüå∫ùë¥ùë¨ùë∫ùë∫ùë®ùëÆùë¨üå∫‚ùÄüçÄ\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇùó†ùó≤ùòÄùòÄùóÆùó¥ùó≤ ùó≤ùóªùòÉùóºùòÜùó≤ÃÅ ùóÆ\n‚îÇ%1 ùóÆùó±ùó∫ùó∂ùóª(ùòÄ) ùóÆùòÉùó≤ùó∞\n‚îÇùòÄùòÇùó∞ùó∞ùó≤ÃÄùòÄ..!\n‚îÇ%2\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇ(‚ùÄ‚ïπ–∑‚ïπ)üçÄ(‚âßŒµ‚â¶)\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ",
			failed: "\n. ‚àß,,,‚àß\n. (  Ã≥‚Ä¢ ¬∑ ‚Ä¢ Ã≥)„Äù‚Çé‚Çé ùêªùêºùëÅùê¥ùëáùê¥....¬∞-`‚ú¶\n‚ï≠‚à™‚îÅ‚à™‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇüçÄ‚ùÄüå∫ùë¥ùë¨ùë∫ùë∫ùë®ùëÆùë¨üå∫‚ùÄüçÄ\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\nùòåùò§ùò©ùò¶ùò§ ùò•ùò¶ ùò≠'ùò¶ùòØùò∑ùò∞ùò™ùò¶\n‚îÇùò•ùò∂ ùòÆùò¶ùò¥ùò¥ùò¢ùò®ùò¶ ùò¢\n‚îÇ%1 ùò¢ùò•ùòÆùò™ùòØ\n‚îÇ%2\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇ(∆Ü Àò‚å£Àò)üö´(Àò‚å£Àò C).\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ",
			reply: "\n.   /)    /)\n.  (·óí‚àá·óï)„Äù‚Çé‚Çé ùêªùêºùëÅùê¥ùëáùê¥....¬∞-`‚ú¶\n‚ï≠‚à™‚îÅ‚à™‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇüçÄ‚ùÄüå∫ùë¥ùë¨ùë∫ùë∫ùë®ùëÆùë¨üå∫‚ùÄüçÄ\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇüìç REPONSE DE\n‚îÇL'ADMINISTRATEUR \n‚îÇ%1\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n[‚úéÔπè%2ÔπèÔπè‚úè]\n‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇùó•ùó≤ÃÅùóΩùóºùóªùó±ùòÄ ùóÆÃÄ ùó∞ùó≤\n‚îÇùó∫ùó≤ùòÄùòÄùóÆùó¥ùó≤ ùóΩùóºùòÇùóø ùó∞ùóºùóªùòÅùó∂ùóªùòÇùó≤ùóø\n‚îÇùóÆÃÄ ùó±ùó∂ùòÄùó∞ùòÇùòÅùó≤ùóø ùóÆùòÉùó≤ùó∞\n‚îÇùóπ'ùóÆùó±ùó∫ùó∂ùóª\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇ‚úß.(‚äÉ^ œâ ^)üçÄ(‚Å†„Éª‚Å†Ôπè‚Ä¢·Éö‚Å†).\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ",
			replySuccess: "üçÄVotre r√©ponse a √©t√© envoy√© √† l'administrateur avec succ√®s !!üéâ",
			feedback: "\n.   /)    /)\n.  (‚óî œâ ‚óî)„Äù‚Çé‚Çé ùêªùêºùëÅùê¥ùëáùê¥....¬∞-`‚ú¶\n‚ï≠‚à™‚îÅ‚à™‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇüå∫‚ùÄüçÄùë¥ùë¨ùë∫ùë∫ùë®ùëÆùë¨üçÄ‚ùÄüå∫\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇùë¥ùë¨ùë∫ùë∫ùë®ùëÆùë¨ ùë´ùë¨\n‚îÇ ùë≥'ùëºùëªùë∞ùë≥ùë∞ùë∫ùë®ùëªùë¨ùëºùëπ\n‚îÇ%1\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇùó¶ùóºùóª ùòÇùó∂ùó±\n‚îÇ%2n‚îÇ%3\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n[‚úéÔπè%4Ôπè]\n‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇùëπùíÜÃÅùíëùíêùíèùíÖùíî ùíÇÃÄ ùíÑùíÜ ùíéùíÜùíîùíîùíÇùíàùíÜ\n‚îÇùíëùíêùíñùíì ùíÑùíêùíèùíïùíäùíèùíñùíÜùíì ùíçùíÇ\n‚îÇùíÖùíäùíîùíÑùíñùíîùíîùíäùíêùíè ùíÇùíóùíÜùíÑ\n‚îÇùíç'ùíñùíïùíäùíçùíäùíîùíÇùíïùíÜùíñùíì\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚îÇ‚úß.(‚óè¬¥ ·¥à`)üçÄ(·¥ñ ·¥ë ·¥ñ‡πë) .\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ",
			replyUserSuccess: "üçÄVotre r√©ponse a √©t√© envoy√© avec succ√®s..üéâ",
			noAdmin: "ùêâùêÑ ùêç'ùêÄùêà ùêèùêÄùêí ùêÉ'ùêÄùêÉùêåùêàùêç ùêèùêéùêîùêë ùêãùêÑ ùêåùêéùêåùêÑùêçùêì"
		}
	},

	onStart: async function ({ args, message, event, usersData, threadsData, api, commandName, getLang }) {
		const { config } = global.GoatBot;
		if (!args[0])
			return message.reply(getLang("missingMessage"));
		const { senderID, threadID, isGroup } = event;
		if (config.adminBot.length == 0)
			return message.reply(getLang("noAdmin"));
		const senderName = await usersData.getName(senderID);
		const msg = "\n.   /)    /)\n.  (ÔΩ°‚Ä¢‚àá‚Ä¢ÔΩ°)„Äù‚Çé‚Çéùó†ùó≤ùòÄùòÄùóÆùó¥ùó≤.¬∞‚ú¶\n‚ï≠‚à™‚îÅ‚à™‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ"
			+ `\n‚îÇùóòùóªùòÉùóºùòÜùó≤ÃÅ ùóΩùóÆùóø\n‚îÇ${senderName}\n‚îú‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ`
			+ `\n‚îÇùó¶ùóºùóª ùòÇùó∂ùó± ùó≤ùòÄùòÅ\n‚îÇ${senderID}\n‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ`
			+ (isGroup ? getLang("sendByGroup", (await threadsData.get(threadID)).threadName, threadID) : getLang("sendByUser"));

		const formMessage = {
			body: msg + getLang("content", args.join(" ")),
			mentions: [{
				id: senderID,
				tag: senderName
			}],
			attachment: await getStreamsFromAttachment(
				[...event.attachments, ...(event.messageReply?.attachments || [])]
					.filter(item => mediaTypes.includes(item.type))
			)
		};

		const successIDs = [];
		const failedIDs = [];
		const adminNames = await Promise.all(config.adminBot.map(async item => ({
			id: item,
			name: await usersData.getName(item)
		})));

		for (const uid of config.adminBot) {
			try {
				const messageSend = await api.sendMessage(formMessage, uid);
				successIDs.push(uid);
				global.GoatBot.onReply.set(messageSend.messageID, {
					commandName,
					messageID: messageSend.messageID,
					threadID,
					messageIDSender: event.messageID,
					type: "userCallAdmin"
				});
			}
			catch (err) {
				failedIDs.push({
					adminID: uid,
					error: err
				});
			}
		}

		let msg2 = "";
		if (successIDs.length > 0)
			msg2 += getLang("success", successIDs.length,
				adminNames.filter(item => successIDs.includes(item.id)).map(item => ` \n‚îÇ<@${item.id}>\n‚îÇ(${item.name})`).join("\n‚îÇ")
			);
		if (failedIDs.length > 0) {
			msg2 += getLang("failed", failedIDs.length,
				failedIDs.map(item => ` <@${item.adminID}> (${adminNames.find(item2 => item2.id == item.adminID)?.name || item.adminID})`).join("\n")
			);
			log.err("CALL ADMIN", failedIDs);
		}
		return message.reply({
			body: msg2,
			mentions: adminNames.map(item => ({
				id: item.id,
				tag: item.name
			}))
		});
	},

	onReply: async ({ args, event, api, message, Reply, usersData, commandName, getLang }) => {
		const { type, threadID, messageIDSender } = Reply;
		const senderName = await usersData.getName(event.senderID);
		const { isGroup } = event;

		switch (type) {
			case "userCallAdmin": {
				const formMessage = {
					body: getLang("reply", senderName, args.join(" ")),
					mentions: [{
						id: event.senderID,
						tag: senderName
					}],
					attachment: await getStreamsFromAttachment(
						event.attachments.filter(item => mediaTypes.includes(item.type))
					)
				};

				api.sendMessage(formMessage, threadID, (err, info) => {
					if (err)
						return message.err(err);
					message.reply(getLang("replyUserSuccess"));
					global.GoatBot.onReply.set(info.messageID, {
						commandName,
						messageID: info.messageID,
						messageIDSender: event.messageID,
						threadID: event.threadID,
						type: "adminReply"
					});
				}, messageIDSender);
				break;
			}
			case "adminReply": {
				let sendByGroup = "";
				if (isGroup) {
					const { threadName } = await api.getThreadInfo(event.threadID);
					sendByGroup = getLang("sendByGroup", threadName, event.threadID);
				}
				const formMessage = {
					body: getLang("feedback", senderName, event.senderID, sendByGroup, args.join(" ")),
					mentions: [{
						id: event.senderID,
						tag: senderName
					}],
					attachment: await getStreamsFromAttachment(
						event.attachments.filter(item => mediaTypes.includes(item.type))
					)
				};

				api.sendMessage(formMessage, threadID, (err, info) => {
					if (err)
						return message.err(err);
					message.reply(getLang("replySuccess"));
					global.GoatBot.onReply.set(info.messageID, {
						commandName,
						messageID: info.messageID,
						messageIDSender: event.messageID,
						threadID: event.threadID,
						type: "userCallAdmin"
					});
				}, messageIDSender);
				break;
			}
			default: {
				break;
			}
		}
	}
};
